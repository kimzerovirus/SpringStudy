<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- Root Context: defines shared resources visible to all other web components -->
    <!-- [1] DataSource 빈을 등록
            (1) DriverManagerDataSource 빈을 등록
            (2) server.xml에 설정되어 있는 DBCP를 JNDI로 찾아쓰도록 등록하는 방법
     -->
    <!-- (1) DriverManagerDataSource -->

<!--  Oracle DB  -->
<!--    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" >-->
<!--        <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />-->
<!--        <property name="url" value="jdbc:oracle:thin:@localhost:1521:XE" />-->
<!--        <property name="username" value="scott" />-->
<!--        <property name="password" value="tiger" />-->
<!--    </bean>-->

<!--  MySql DB  -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
        <property name="url" value="jdbc:mysql://127.0.0.1:3306/tbl"></property>
        <property name="username" value="root"></property>
        <property name="password" value="1234"></property>
    </bean>

    <!-- [2] SqlSessionFactoryBean 등록-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:spring/config/mybatis-config.xml" />
    </bean>

    <!-- [3] SqlSessionTemplate빈 등록 -->
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory" />
    </bean>
</beans>
