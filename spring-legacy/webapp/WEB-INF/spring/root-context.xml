<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

    <!-- Root Context: defines shared resources visible to all other web components -->
    <!-- 네임스페이스 context, mybatis-spring 추가하였음 -->
    <!--[1] DataSource 빈을 등록
            (1) DriverManagerDataSource 빈을 등록
            (2) server.xml에 설정되어 있는 DBCP를 JNDI로 찾아쓰도록 등록하는 방법
            (3) HikariCP커넥션 풀을 이용하는 방법 [교재 176p]
      -->
<!--    &lt;!&ndash; (1) DriverManagerDataSource &ndash;&gt;-->
<!--    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">-->
<!--        <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>-->
<!--        <property name="url" value="jdbc:oracle:thin:@localhost:1521:XE"/>-->
<!--        <property name="username" value="scott"/>-->
<!--        <property name="password" value="tiger"/>-->
<!--    </bean>-->
<!--    &lt;!&ndash; (2) JNDI로 룩업하여 사용하는 방법: Tomcat서버에 등록된 DataSource를 이름으로 찾아-->
<!--                빈으로 등록하는 방법 &ndash;&gt;-->
<!--    <bean id="jndiDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">-->
<!--        <property name="jndiName" value="java:comp/env/jdbc/myshop"/>-->
<!--    </bean>-->

    <!-- (3) HikariCP 커넥션 풀을 이용하는 방법 sqlSessionFactory => hikariDataSource -->
<!--  oracle  -->
<!--    <bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">-->
<!--        <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>-->
<!--        <property name="jdbcUrl" value="jdbc:oracle:thin:@localhost:1521:XE"/>-->
<!--        <property name="username" value="myshop"/>-->
<!--        <property name="password" value="tiger"/>-->
<!--    </bean>-->

    <bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="jdbcUrl" value="jdbc:mysql://127.0.0.1:3306/board_sample?characterEncoding=UTF-8&amp;serverTimezone=UTC"/>
        <property name="username" value="root"/>
        <property name="password" value="1541"/>
    </bean>

    <bean id="hikariDataSource" class="com.zaxxer.hikari.HikariDataSource"
          destroy-method="close">
        <constructor-arg ref="hikariConfig"/>
    </bean>

    <!-- [2] SqlSessionFactoryBean -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="hikariDataSource"/>
        <property name="configLocation" value="classpath:spring/config/mybatis-config.xml"/>
    </bean>

    <!-- [3] SqlSessionTemplate -->
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory"/>
    </bean>

    <!-- [4] mybatis-spring:scan설정 -->
    <mybatis-spring:scan base-package="com.kzv.mvc"/>

</beans>